{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","handlInputChange","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,MA/Bf,YAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACG,sBAAMC,SATY,SAACC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAKjB,SACG,uBACGO,KAAK,OACLC,MAAQT,EACRU,SAAU,SAACP,GAAD,OAjBM,SAAAA,GACtBF,EAAcE,EAAEQ,OAAOF,OAgBAG,CAAiBT,S,+BCxBjCU,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfC,EADe,iDACmCC,UAAUH,GAD7C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARnB,kBAWfM,GAXe,4CAAH,sDCWNO,MATf,YAAsC,IAAfH,EAAc,EAAdA,MAAOV,EAAO,EAAPA,IAC3B,OACG,sBAAKc,UAAU,yDAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCsBEO,MAxBf,YAAgC,IAAbnB,EAAY,EAAZA,SAAY,ECDJ,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAChCsB,KAAK,GACLa,SAAQ,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAexC,OARAC,qBAAU,WACPxB,EAASC,GACLwB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACrBf,KAAKkB,EACLL,SAAQ,SAEf,CAACpB,IAEIqB,EDZ0BK,CAAY1B,GAAhCa,EAFe,EAEpBN,KAAaa,EAFO,EAEPA,QAErB,OACG,qCACG,oBAAIJ,UAAU,oDAAd,SAAoEhB,IAElEoB,EAAU,mBAAGJ,UAAU,mDAAb,sBAA+E,KAE3F,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADAA,EAAIC,aEUfgB,MAxBf,WAA0B,IAAD,EAEc1C,mBAAS,CAAC,cAFxB,mBAEf2C,EAFe,KAEH5C,EAFG,KAItB,OACG,qCACG,iDACA,cAAC,EAAD,CACGA,cAAeA,IAElB,uBAEA,6BACK4C,EAAWnB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAEGA,SAAUA,GADLA,Y,MCdvB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.1816d2db.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction AddCategory({ setCategories }) {\r\n\r\n   const [inputValue, setInputValue] = useState(\"\");\r\n\r\n   const handlInputChange = e => {\r\n      setInputValue(e.target.value);\r\n   }\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      if( inputValue.trim().length > 2 ){\r\n         setCategories(cat => [inputValue, ...cat]);\r\n         setInputValue('');\r\n      }\r\n   }\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={(e) => handlInputChange(e)}\r\n         />\r\n      </form>\r\n   )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n   setCategories : PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifts = async ( category ) => {\r\n   const url  = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=A4fQkAfigWA9yaSfJlAXgDO94gFZmo4w`;\r\n   const resp = await fetch(url);\r\n   const { data } = await resp.json();\r\n   const gifs = data.map( img => {\r\n      return {\r\n         id: img.id,\r\n         title: img.title,\r\n         url: img.images?.downsized_medium.url\r\n      }\r\n   });\r\n  return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nfunction GifGridItem({ title, url }) {\r\n   return (\r\n      <div className=\"card animate__animated animate__bounce animate__fadeIn\">\r\n         <img src={url} alt={title} />\r\n         <p>{title}</p>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nfunction GifGrid({ category }) {\r\n\r\n   const { data:images, loading } = useFetchGif(category);\r\n\r\n   return (\r\n      <>\r\n         <h3 className=\"animate__animated animate__bounce animate__fadeIn\">{ category }</h3>\r\n\r\n         { loading ? <p className=\"animate__animated animate__bounce animate__flash\">Cargando</p> : null }\r\n         \r\n         <div className=\"card-grid\">\r\n            {\r\n               images.map((img) => (\r\n                  <GifGridItem \r\n                     key={img.id}\r\n                     { ...img }\r\n                  />\r\n               ))\r\n            }\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGif = ( category ) => {\r\n\r\n   const [state, setState] = useState({\r\n      data:[],\r\n      loading:true\r\n   });\r\n\r\n   useEffect(() => {\r\n      getGifts(category)\r\n         .then( imgs => setState({\r\n            data:imgs,\r\n            loading:false\r\n         }));\r\n   },[category]);\r\n\r\n   return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nfunction GiftExpertApp() {\r\n\r\n   const [categories, setCategories] = useState(['One Punch']);\r\n\r\n   return (\r\n      <>\r\n         <h2>Gift Expert App</h2>\r\n         <AddCategory \r\n            setCategories={setCategories}\r\n         />\r\n         <hr />\r\n\r\n         <ol>\r\n            { categories.map((category) => (\r\n               <GifGrid \r\n                  key={category}\r\n                  category={category}\r\n               />\r\n            )) }\r\n         </ol>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default GiftExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}